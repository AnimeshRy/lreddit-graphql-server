# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type FieldError {
  field: String!
  message: String!
}

type Mutation {
  changePassword(newPassword: String!, token: String!): UserResponse!
  createPost(input: PostInput!): PostResponse!
  createSubReddit(input: SubRedditCreateInput!): SubRedditResponse!
  deletePost(id: String!): PostResponse
  deleteSubReddit(id: String!): SubRedditResponse!
  forgotPassword(email: String!): Boolean!
  login(password: String!, usernameOrEmail: String!): UserResponse!
  logout: Boolean!
  register(options: UsernamePasswordInput!): UserResponse!
  subscribeSubReddit(id: String!): SubRedditResponse!
  unsubscribeSubReddit(id: String!): SubRedditResponse!
  updatePost(id: String!, title: PostInput!): PostResponse
  updateSubReddit(id: String!, title: SubRedditUpdateInput!): SubRedditResponse
}

type Post {
  createdAt: String!
  id: String!
  points: Float!
  text: String!
  title: String!
  updatedAt: String!
}

input PostInput {
  subReddit: String!
  text: String!
  title: String!
}

type PostResponse {
  errors: [FieldError!]
  post: Post
  success: Boolean
}

type Query {
  hello: String!
  me: User
  post(id: String!): Post
  posts: [Post!]!
  subreddit(id: String!): SubReddit
  subreddits: [SubReddit!]!
}

type SubReddit {
  createdAt: String!
  creator: User!
  id: String!

  """SubReddit name MaxLength > 30"""
  name: String!
  posts: [Post!]
  subscribers: [SubScription!]
  text: String!
  updatedAt: String!
}

input SubRedditCreateInput {
  name: String!
  text: String!
}

type SubRedditResponse {
  errors: [FieldError!]
  subReddit: SubReddit
  success: Boolean
}

input SubRedditUpdateInput {
  text: String!
}

type SubScription {
  createdAt: String!
  subReddit: String!
  updatedAt: String!
  user: String!
}

type User {
  createdAt: String!
  createdSubreddits: [SubReddit!]
  email: String!
  id: String!
  subscriptions: [SubScription!]
  updatedAt: String!
  username: String!
}

type UserResponse {
  errors: [FieldError!]
  success: Boolean
  user: User
}

input UsernamePasswordInput {
  email: String!
  password: String!
  username: String!
}